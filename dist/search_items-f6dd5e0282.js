searchNodes=[{"doc":"Author is a set of functions which can be used by server-side elixir applications to integrate authentication and authorization into the server. In the future different authentication and authorization methods will be supported. This will be Basic HTTP authentication OAuth OpenID Connect (OIDC) Roadmap Implement entities Add the user entity Implement Basic Authentication Implement OAuth Add the scope entity Add the token entity Add the protected resource entity Implement a DSL for protected resources Installation When available in hex the package can be installed with: defp deps ( ) do [ { :author , &quot;~&gt; 0.0.0&quot; } ] end Usage License Author is licensed under the MIT license.","ref":"Author.html","title":"Author","type":"module"},{"doc":"Author Author provides an API for implementing authentication and authorization in server-side elixir applications.","ref":"readme.html","title":"Author","type":"extras"},{"doc":"If available in Hex , the package can be installed by adding author to your list of dependencies in mix.exs : def deps do [ { :author , &quot;~&gt; 0.0.0&quot; } ] end Documentation can be generated with ExDoc and published on HexDocs . Once published, the docs can be found at https://hexdocs.pm/author .","ref":"readme.html#installation","title":"Author - Installation","type":"extras"}]